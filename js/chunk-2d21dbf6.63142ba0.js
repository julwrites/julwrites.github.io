(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d21dbf6"],{d32c:function(e,o,n){"use strict";n.r(o);var s=function(){var e=this,o=e.$createElement;e._self._c;return e._m(0)},t=[function(){var e=this,o=e.$createElement,n=e._self._c||o;return n("section",[n("h1",[e._v("Internet and storage for my code-server")]),n("p",[e._v("So day 1 into using my new code server, I immediately found 2 problems.")]),n("ol",[n("li",[e._v("I had no access to the storage volume I had assigned to my code-server instance.")]),n("li",[e._v("My code-server instance had no internet access.")])]),n("p",[e._v("Now, I can see why as a default this would be fine, since Docker is supposed to be containerized and so on, but 1. was annoying, and 2. kind of defeated the purpose of me using code-server at all.")]),n("p",[e._v("While I was researching solutions, I decided to switch to using "),n("code",{pre:!0},[e._v("linuxserver/code-server")]),e._v(" since I found it had more settings enabled for me (e.g. I could set "),n("code",{pre:!0},[e._v("SUDO_PASSWORD")]),e._v(" to enable sudo while using it), and also had a community I could access to ask questions. This was really a drop-in replacement, and perhaps a lesson for me on one of the benefits of docker; it was no effort at all to configure a docker instance for the new code-server, and simply point it to the port that I had previously designated for code-server to run.")])])}],a=n("2877"),r={},i=Object(a["a"])(r,s,t,!1,null,null,null);o["default"]=i.exports}}]);
//# sourceMappingURL=chunk-2d21dbf6.63142ba0.js.map