(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-09a6e584"],{"3c28":function(e,t,o){e.exports=o.p+"img/CockpitFirewall.e50305a4.png"},"47bf":function(e,t,o){"use strict";o.r(t);var n=function(){var e=this,t=e.$createElement;e._self._c;return e._m(0)},r=[function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("section",[n("h1",[e._v("Setting up Nginx Reverse Proxy to Custom Domain")]),n("p",[e._v("Next I wanted to be able to access this from my custom domain, and therefore have a browser-based IDE available for myself anywhere with internet access.")]),n("p",[e._v("This took a little more work; I had to install "),n("code",{pre:!0},[e._v("nginx")]),e._v(" to serve as a reverse proxy, and "),n("code",{pre:!0},[e._v("certbot-nginx")]),e._v(" for SSL encryption.")]),n("p",[e._v("A couple of commands later...")]),n("ul",[n("li",[n("code",{pre:!0},[e._v("dnf install -y nginx certbot-nginx")])]),n("li",[n("code",{pre:!0},[e._v("systemctl enable nginx --now")])])]),n("p",[e._v("Some configuration needed to be done for "),n("code",{pre:!0},[e._v("nginx")]),e._v(" to do proxy passing to my existing servers. I had previously set up NextCloud on a Raspberry Pi, so that had to be modified to allow the new server with "),n("code",{pre:!0},[e._v("nginx")]),e._v(" to handle the reverse proxy for all devices behind the IP address.")]),n("p",[e._v("I set up the "),n("code",{pre:!0},[e._v("nginx.conf")]),e._v(" to listen on Port 443, and did some "),n("a",{attrs:{href:"https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-centos-7"}},[e._v("configuration")]),e._v(" to perform a "),n("code",{pre:!0},[e._v("proxy_pass")]),e._v(" to the other servers involved. This proved tricky when it came to SSL certification; LetsEncrypt required that the custom domain being specified for SSL certification be accessible and responsive, which led to a number of retries and that in turn led to a number of failed attempts, which... Had some "),n("a",{attrs:{href:"https://letsencrypt.org/docs/rate-limits/"}},[e._v("rate limits")]),e._v(" that made it quite a pain to get working.")]),n("p",[e._v("I then added an A record to my subdomain, and pointed it to my public IP address, added port forwarding on my router to my device for "),n("code",{pre:!0},[e._v("http")]),e._v(" and "),n("code",{pre:!0},[e._v("https")]),e._v(" access, and... Poof, went my Cockpit access. I had managed to cause Cockpit's SSL cert to be replaced. This was, fortunately, easily resolved by SSH-ing into the client and re-running "),n("code",{pre:!0},[e._v("certbot")]),e._v(" to "),n("a",{attrs:{href:"https://certbot.eff.org/lets-encrypt/fedora-nginx"}},[e._v("replace the certificate")]),e._v(".")]),n("p",[e._v("Some debugging on whether "),n("code",{pre:!0},[e._v("nginx")]),e._v(" was actually listening to Port 443 told me that it was.")]),n("pre",{pre:!0},[n("code",{pre:!0,attrs:{"v-pre":""}},[e._v("# netstat -anop | grep LISTEN | grep nginx\ntcp        0      0 0.0.0.0:443             0.0.0.0:*               LISTEN      1049/nginx: master   off (0.00/0/0)\n")])]),n("p",[e._v("I made sure "),n("code",{pre:!0},[e._v("certbot")]),e._v(" was "),n("a",{attrs:{href:"https://certbot.eff.org/lets-encrypt/fedora-nginx"}},[e._v("registering my certificates and keys")]),e._v(" properly before proceeding, but this still didn't get me access through my custom domain. This did allow me though, to get past the rate limits since I now had valid certificates that did not need to be renewed, simply used. This was done by setting up my "),n("code",{pre:!0},[e._v("nginx.conf")]),e._v(" such that each server had it's own SSL configuration.")]),n("pre",{pre:!0},[n("code",{pre:!0,attrs:{"v-pre":""}},[e._v("server {\n    listen       443 ssl;\n\n    server_name  <custom domain>;\n\n    ssl_certificate         /etc/letsencrypt/live/<custom domain>/cert.pem;\n    ssl_certificate_key     /etc/letsencrypt/live/<custom domain>/privkey.pem;\n\n    access_log              /var/log/nginx/<custom domain>.access.log;\n    error_log               /var/log/nginx/<custom domain>.error.log;\n\n    location / {\n        proxy_pass                http://localhost:8080;\n        proxy_redirect            http://localhost:8080 https://<custom domain>;\n    }\n}\n")])]),n("p",[e._v("Next I had to make sure the firewall wasn't blocking my ports. This was fairly easy to do with Cockpit, and I was able to quickly check that the service was enabling Port access for 443.")]),n("p",[n("img",{attrs:{src:o("3c28"),alt:"CockpitFirewall.png"}})]),n("p",[e._v("Another thing to check was that SELinux wasn't blocking something that docker needed to access the network, so after some "),n("a",{attrs:{href:"https://stackoverflow.com/questions/23948527/13-permission-denied-while-connecting-to-upstreamnginx"}},[e._v("searching")]),e._v("...")]),n("pre",{pre:!0},[n("code",{pre:!0,attrs:{"v-pre":""}},[e._v("setsebool httpd_can_network_connect on -P\n")])]),n("p",[e._v("Finally I found that "),n("code",{pre:!0},[e._v("nginx")]),e._v(" was running as root, but that "),n("code",{pre:!0},[e._v("nginx.conf")]),e._v(" had set the user field to "),n("code",{pre:!0},[e._v("nginx")]),e._v(" instead of "),n("code",{pre:!0},[e._v("root")]),e._v(". Once this was toggled, access to my code server was enabled, and I could see the login page.")]),n("p",[n("img",{attrs:{src:o("c80c"),alt:"CodeTehjIo.png"}})]),n("p",[e._v("This had one last issue, which was that while the login page displayed, and I could log in, code-server didn't load. Opening the console window showed a whole bunch of "),n("code",{pre:!0},[e._v("websocket")]),e._v(" errors, and upon some research, I found that this was because "),n("code",{pre:!0},[e._v("nginx")]),e._v(" needed to pass more "),n("a",{attrs:{href:"https://github.com/websockets/ws/issues/979#issuecomment-337934638"}},[e._v("proxy header information")]),e._v(" to docker than it was already doing (it was receiving a success code back that it didn't know how to handle)")]),n("pre",{pre:!0},[n("code",{pre:!0,attrs:{"v-pre":""}},[e._v('location / {\n    proxy_pass                 http://localhost:8080;\n    proxy_http_version 1.1;\n    proxy_set_header   Upgrade $http_upgrade;\n    proxy_set_header   Connection "upgrade";\n    proxy_set_header   Host $host;\n}\n')])]),n("p",[e._v("Once this was done, everything worked, and code-server was accessible from the browser through my custom domain.")]),n("p",[n("img",{attrs:{src:o("6455"),alt:"CodeServer.png"}})])])}],s=o("2877"),a={},i=Object(s["a"])(a,n,r,!1,null,null,null);t["default"]=i.exports},6455:function(e,t,o){e.exports=o.p+"img/CodeServer.694bfcd5.png"},c80c:function(e,t,o){e.exports=o.p+"img/CodeTehjIo.c609b702.png"}}]);
//# sourceMappingURL=chunk-09a6e584.312774d7.js.map