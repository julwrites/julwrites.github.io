["^ ","~:output",["^ ","~:js","goog.provide('cljs.tools.reader.impl.utils');\r\ngoog.require('cljs.core');\r\ngoog.require('clojure.string');\r\ngoog.require('goog.string');\r\ncljs.tools.reader.impl.utils.char$ = (function cljs$tools$reader$impl$utils$char(x){\r\nif((x == null)){\r\nreturn null;\r\n} else {\r\nreturn cljs.core.char$(x);\r\n}\r\n});\r\ncljs.tools.reader.impl.utils.ex_info_QMARK_ = (function cljs$tools$reader$impl$utils$ex_info_QMARK_(ex){\r\nreturn (ex instanceof cljs.core.ExceptionInfo);\r\n});\r\n\r\n/**\r\n* @constructor\r\n * @implements {cljs.core.IRecord}\r\n * @implements {cljs.core.IKVReduce}\r\n * @implements {cljs.core.IEquiv}\r\n * @implements {cljs.core.IHash}\r\n * @implements {cljs.core.ICollection}\r\n * @implements {cljs.core.ICounted}\r\n * @implements {cljs.core.ISeqable}\r\n * @implements {cljs.core.IMeta}\r\n * @implements {cljs.core.ICloneable}\r\n * @implements {cljs.core.IPrintWithWriter}\r\n * @implements {cljs.core.IIterable}\r\n * @implements {cljs.core.IWithMeta}\r\n * @implements {cljs.core.IAssociative}\r\n * @implements {cljs.core.IMap}\r\n * @implements {cljs.core.ILookup}\r\n*/\r\ncljs.tools.reader.impl.utils.ReaderConditional = (function (splicing_QMARK_,form,__meta,__extmap,__hash){\r\nthis.splicing_QMARK_ = splicing_QMARK_;\r\nthis.form = form;\r\nthis.__meta = __meta;\r\nthis.__extmap = __extmap;\r\nthis.__hash = __hash;\r\nthis.cljs$lang$protocol_mask$partition0$ = 2230716170;\r\nthis.cljs$lang$protocol_mask$partition1$ = 139264;\r\n});\r\ncljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (this__4385__auto__,k__4386__auto__){\r\nvar self__ = this;\r\nvar this__4385__auto____$1 = this;\r\nreturn this__4385__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__4386__auto__,null);\r\n});\r\n\r\ncljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (this__4387__auto__,k25432,else__4388__auto__){\r\nvar self__ = this;\r\nvar this__4387__auto____$1 = this;\r\nvar G__25445 = k25432;\r\nvar G__25445__$1 = (((G__25445 instanceof cljs.core.Keyword))?G__25445.fqn:null);\r\nswitch (G__25445__$1) {\r\ncase \"splicing?\":\r\nreturn self__.splicing_QMARK_;\r\n\r\nbreak;\r\ncase \"form\":\r\nreturn self__.form;\r\n\r\nbreak;\r\ndefault:\r\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k25432,else__4388__auto__);\r\n\r\n}\r\n});\r\n\r\ncljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (this__4404__auto__,f__4405__auto__,init__4406__auto__){\r\nvar self__ = this;\r\nvar this__4404__auto____$1 = this;\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (this__4404__auto____$1){\r\nreturn (function (ret__4407__auto__,p__25449){\r\nvar vec__25452 = p__25449;\r\nvar k__4408__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25452,(0),null);\r\nvar v__4409__auto__ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25452,(1),null);\r\nreturn (f__4405__auto__.cljs$core$IFn$_invoke$arity$3 ? f__4405__auto__.cljs$core$IFn$_invoke$arity$3(ret__4407__auto__,k__4408__auto__,v__4409__auto__) : f__4405__auto__.call(null,ret__4407__auto__,k__4408__auto__,v__4409__auto__));\r\n});})(this__4404__auto____$1))\r\n,init__4406__auto__,this__4404__auto____$1);\r\n});\r\n\r\ncljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (this__4399__auto__,writer__4400__auto__,opts__4401__auto__){\r\nvar self__ = this;\r\nvar this__4399__auto____$1 = this;\r\nvar pr_pair__4402__auto__ = ((function (this__4399__auto____$1){\r\nreturn (function (keyval__4403__auto__){\r\nreturn cljs.core.pr_sequential_writer(writer__4400__auto__,cljs.core.pr_writer,\"\",\" \",\"\",opts__4401__auto__,keyval__4403__auto__);\r\n});})(this__4399__auto____$1))\r\n;\r\nreturn cljs.core.pr_sequential_writer(writer__4400__auto__,pr_pair__4402__auto__,\"#cljs.tools.reader.impl.utils.ReaderConditional{\",\", \",\"}\",opts__4401__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"splicing?\",\"splicing?\",-428596366),self__.splicing_QMARK_],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),self__.form],null))], null),self__.__extmap));\r\n});\r\n\r\ncljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (G__25431){\r\nvar self__ = this;\r\nvar G__25431__$1 = this;\r\nreturn (new cljs.core.RecordIter((0),G__25431__$1,2,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\"splicing?\",\"splicing?\",-428596366),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\r\n});\r\n\r\ncljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IMeta$_meta$arity$1 = (function (this__4383__auto__){\r\nvar self__ = this;\r\nvar this__4383__auto____$1 = this;\r\nreturn self__.__meta;\r\n});\r\n\r\ncljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (this__4380__auto__){\r\nvar self__ = this;\r\nvar this__4380__auto____$1 = this;\r\nreturn (new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_,self__.form,self__.__meta,self__.__extmap,self__.__hash));\r\n});\r\n\r\ncljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICounted$_count$arity$1 = (function (this__4389__auto__){\r\nvar self__ = this;\r\nvar this__4389__auto____$1 = this;\r\nreturn (2 + cljs.core.count(self__.__extmap));\r\n});\r\n\r\ncljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IHash$_hash$arity$1 = (function (this__4381__auto__){\r\nvar self__ = this;\r\nvar this__4381__auto____$1 = this;\r\nvar h__4243__auto__ = self__.__hash;\r\nif((!((h__4243__auto__ == null)))){\r\nreturn h__4243__auto__;\r\n} else {\r\nvar h__4243__auto____$1 = (function (){var fexpr__25458 = ((function (h__4243__auto__,this__4381__auto____$1){\r\nreturn (function (coll__4382__auto__){\r\nreturn (-209062840 ^ cljs.core.hash_unordered_coll(coll__4382__auto__));\r\n});})(h__4243__auto__,this__4381__auto____$1))\r\n;\r\nreturn fexpr__25458(this__4381__auto____$1);\r\n})();\r\nself__.__hash = h__4243__auto____$1;\r\n\r\nreturn h__4243__auto____$1;\r\n}\r\n});\r\n\r\ncljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this25433,other25434){\r\nvar self__ = this;\r\nvar this25433__$1 = this;\r\nreturn (((!((other25434 == null)))) && ((this25433__$1.constructor === other25434.constructor)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this25433__$1.splicing_QMARK_,other25434.splicing_QMARK_)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this25433__$1.form,other25434.form)) && (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this25433__$1.__extmap,other25434.__extmap)));\r\n});\r\n\r\ncljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (this__4394__auto__,k__4395__auto__){\r\nvar self__ = this;\r\nvar this__4394__auto____$1 = this;\r\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\"splicing?\",\"splicing?\",-428596366),null,new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),null], null), null),k__4395__auto__)){\r\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__4394__auto____$1),self__.__meta),k__4395__auto__);\r\n} else {\r\nreturn (new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_,self__.form,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__4395__auto__)),null));\r\n}\r\n});\r\n\r\ncljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (this__4392__auto__,k__4393__auto__,G__25431){\r\nvar self__ = this;\r\nvar this__4392__auto____$1 = this;\r\nvar pred__25463 = cljs.core.keyword_identical_QMARK_;\r\nvar expr__25464 = k__4393__auto__;\r\nif(cljs.core.truth_((function (){var G__25466 = new cljs.core.Keyword(null,\"splicing?\",\"splicing?\",-428596366);\r\nvar G__25467 = expr__25464;\r\nreturn (pred__25463.cljs$core$IFn$_invoke$arity$2 ? pred__25463.cljs$core$IFn$_invoke$arity$2(G__25466,G__25467) : pred__25463.call(null,G__25466,G__25467));\r\n})())){\r\nreturn (new cljs.tools.reader.impl.utils.ReaderConditional(G__25431,self__.form,self__.__meta,self__.__extmap,null));\r\n} else {\r\nif(cljs.core.truth_((function (){var G__25468 = new cljs.core.Keyword(null,\"form\",\"form\",-1624062471);\r\nvar G__25469 = expr__25464;\r\nreturn (pred__25463.cljs$core$IFn$_invoke$arity$2 ? pred__25463.cljs$core$IFn$_invoke$arity$2(G__25468,G__25469) : pred__25463.call(null,G__25468,G__25469));\r\n})())){\r\nreturn (new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_,G__25431,self__.__meta,self__.__extmap,null));\r\n} else {\r\nreturn (new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_,self__.form,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__4393__auto__,G__25431),null));\r\n}\r\n}\r\n});\r\n\r\ncljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this__4397__auto__){\r\nvar self__ = this;\r\nvar this__4397__auto____$1 = this;\r\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"splicing?\",\"splicing?\",-428596366),self__.splicing_QMARK_,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\"form\",\"form\",-1624062471),self__.form,null))], null),self__.__extmap));\r\n});\r\n\r\ncljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this__4384__auto__,G__25431){\r\nvar self__ = this;\r\nvar this__4384__auto____$1 = this;\r\nreturn (new cljs.tools.reader.impl.utils.ReaderConditional(self__.splicing_QMARK_,self__.form,G__25431,self__.__extmap,self__.__hash));\r\n});\r\n\r\ncljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this__4390__auto__,entry__4391__auto__){\r\nvar self__ = this;\r\nvar this__4390__auto____$1 = this;\r\nif(cljs.core.vector_QMARK_(entry__4391__auto__)){\r\nreturn this__4390__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry__4391__auto__,(1)));\r\n} else {\r\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__4390__auto____$1,entry__4391__auto__);\r\n}\r\n});\r\n\r\ncljs.tools.reader.impl.utils.ReaderConditional.getBasis = (function (){\r\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\"splicing?\",\"splicing?\",1211935161,null),new cljs.core.Symbol(null,\"form\",\"form\",16469056,null)], null);\r\n});\r\n\r\ncljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$type = true;\r\n\r\ncljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$ctorPrSeq = (function (this__4428__auto__){\r\nreturn (new cljs.core.List(null,\"cljs.tools.reader.impl.utils/ReaderConditional\",null,(1),null));\r\n});\r\n\r\ncljs.tools.reader.impl.utils.ReaderConditional.cljs$lang$ctorPrWriter = (function (this__4428__auto__,writer__4429__auto__){\r\nreturn cljs.core._write(writer__4429__auto__,\"cljs.tools.reader.impl.utils/ReaderConditional\");\r\n});\r\n\r\n/**\r\n * Positional factory function for cljs.tools.reader.impl.utils/ReaderConditional.\r\n */\r\ncljs.tools.reader.impl.utils.__GT_ReaderConditional = (function cljs$tools$reader$impl$utils$__GT_ReaderConditional(splicing_QMARK_,form){\r\nreturn (new cljs.tools.reader.impl.utils.ReaderConditional(splicing_QMARK_,form,null,null,null));\r\n});\r\n\r\n/**\r\n * Factory function for cljs.tools.reader.impl.utils/ReaderConditional, taking a map of keywords to field values.\r\n */\r\ncljs.tools.reader.impl.utils.map__GT_ReaderConditional = (function cljs$tools$reader$impl$utils$map__GT_ReaderConditional(G__25440){\r\nvar extmap__4424__auto__ = (function (){var G__25475 = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__25440,new cljs.core.Keyword(null,\"splicing?\",\"splicing?\",-428596366),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"form\",\"form\",-1624062471)], 0));\r\nif(cljs.core.record_QMARK_(G__25440)){\r\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__25475);\r\n} else {\r\nreturn G__25475;\r\n}\r\n})();\r\nreturn (new cljs.tools.reader.impl.utils.ReaderConditional(new cljs.core.Keyword(null,\"splicing?\",\"splicing?\",-428596366).cljs$core$IFn$_invoke$arity$1(G__25440),new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(G__25440),null,cljs.core.not_empty(extmap__4424__auto__),null));\r\n});\r\n\r\n/**\r\n * Return true if the value is the data representation of a reader conditional\r\n */\r\ncljs.tools.reader.impl.utils.reader_conditional_QMARK_ = (function cljs$tools$reader$impl$utils$reader_conditional_QMARK_(value){\r\nreturn (value instanceof cljs.tools.reader.impl.utils.ReaderConditional);\r\n});\r\n/**\r\n * Construct a data representation of a reader conditional.\r\n *   If true, splicing? indicates read-cond-splicing.\r\n */\r\ncljs.tools.reader.impl.utils.reader_conditional = (function cljs$tools$reader$impl$utils$reader_conditional(form,splicing_QMARK_){\r\nreturn (new cljs.tools.reader.impl.utils.ReaderConditional(splicing_QMARK_,form,null,null,null));\r\n});\r\ncljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL;\r\n\r\ncljs.tools.reader.impl.utils.ReaderConditional.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){\r\nvar coll__$1 = this;\r\ncljs.core._write(writer,[\"#?\",(cljs.core.truth_(new cljs.core.Keyword(null,\"splicing?\",\"splicing?\",-428596366).cljs$core$IFn$_invoke$arity$1(coll__$1))?\"@\":null)].join(''));\r\n\r\nreturn cljs.core.pr_writer(new cljs.core.Keyword(null,\"form\",\"form\",-1624062471).cljs$core$IFn$_invoke$arity$1(coll__$1),writer,opts);\r\n});\r\ncljs.tools.reader.impl.utils.ws_rx = /[\\s]/;\r\n/**\r\n * Checks whether a given character is whitespace\r\n */\r\ncljs.tools.reader.impl.utils.whitespace_QMARK_ = (function cljs$tools$reader$impl$utils$whitespace_QMARK_(ch){\r\nif((ch == null)){\r\nreturn null;\r\n} else {\r\nif((ch === \",\")){\r\nreturn true;\r\n} else {\r\nreturn cljs.tools.reader.impl.utils.ws_rx.test(ch);\r\n}\r\n}\r\n});\r\n/**\r\n * Checks whether a given character is numeric\r\n */\r\ncljs.tools.reader.impl.utils.numeric_QMARK_ = (function cljs$tools$reader$impl$utils$numeric_QMARK_(ch){\r\nif((ch == null)){\r\nreturn null;\r\n} else {\r\nreturn goog.string.isNumeric(ch);\r\n}\r\n});\r\n/**\r\n * Checks whether the character is a newline\r\n */\r\ncljs.tools.reader.impl.utils.newline_QMARK_ = (function cljs$tools$reader$impl$utils$newline_QMARK_(c){\r\nreturn (((\"\\n\" === c)) || ((\"\\n\" === c)) || ((c == null)));\r\n});\r\n/**\r\n * Resolves syntactical sugar in metadata\r\n */\r\ncljs.tools.reader.impl.utils.desugar_meta = (function cljs$tools$reader$impl$utils$desugar_meta(f){\r\nif((f instanceof cljs.core.Keyword)){\r\nreturn cljs.core.PersistentArrayMap.createAsIfByAssoc([f,true]);\r\n} else {\r\nif((f instanceof cljs.core.Symbol)){\r\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),f], null);\r\n} else {\r\nif(typeof f === 'string'){\r\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"tag\",\"tag\",-1290361223),f], null);\r\n} else {\r\nreturn f;\r\n\r\n}\r\n}\r\n}\r\n});\r\ncljs.tools.reader.impl.utils.last_id = cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\r\ncljs.tools.reader.impl.utils.next_id = (function cljs$tools$reader$impl$utils$next_id(){\r\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.tools.reader.impl.utils.last_id,cljs.core.inc);\r\n});\r\ncljs.tools.reader.impl.utils.namespace_keys = (function cljs$tools$reader$impl$utils$namespace_keys(ns,keys){\r\nvar iter__4523__auto__ = (function cljs$tools$reader$impl$utils$namespace_keys_$_iter__25509(s__25510){\r\nreturn (new cljs.core.LazySeq(null,(function (){\r\nvar s__25510__$1 = s__25510;\r\nwhile(true){\r\nvar temp__5720__auto__ = cljs.core.seq(s__25510__$1);\r\nif(temp__5720__auto__){\r\nvar s__25510__$2 = temp__5720__auto__;\r\nif(cljs.core.chunked_seq_QMARK_(s__25510__$2)){\r\nvar c__4521__auto__ = cljs.core.chunk_first(s__25510__$2);\r\nvar size__4522__auto__ = cljs.core.count(c__4521__auto__);\r\nvar b__25512 = cljs.core.chunk_buffer(size__4522__auto__);\r\nif((function (){var i__25511 = (0);\r\nwhile(true){\r\nif((i__25511 < size__4522__auto__)){\r\nvar key = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4521__auto__,i__25511);\r\ncljs.core.chunk_append(b__25512,(((((key instanceof cljs.core.Symbol)) || ((key instanceof cljs.core.Keyword))))?(function (){var vec__25519 = (function (){var fexpr__25522 = cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace,cljs.core.name);\r\nreturn (fexpr__25522.cljs$core$IFn$_invoke$arity$1 ? fexpr__25522.cljs$core$IFn$_invoke$arity$1(key) : fexpr__25522.call(null,key));\r\n})();\r\nvar key_ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25519,(0),null);\r\nvar key_name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25519,(1),null);\r\nvar __GT_key = (((key instanceof cljs.core.Symbol))?cljs.core.symbol:cljs.core.keyword);\r\nif((key_ns == null)){\r\nreturn (__GT_key.cljs$core$IFn$_invoke$arity$2 ? __GT_key.cljs$core$IFn$_invoke$arity$2(ns,key_name) : __GT_key.call(null,ns,key_name));\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"_\",key_ns)){\r\nreturn (__GT_key.cljs$core$IFn$_invoke$arity$1 ? __GT_key.cljs$core$IFn$_invoke$arity$1(key_name) : __GT_key.call(null,key_name));\r\n} else {\r\nreturn key;\r\n\r\n}\r\n}\r\n})():key));\r\n\r\nvar G__25542 = (i__25511 + (1));\r\ni__25511 = G__25542;\r\ncontinue;\r\n} else {\r\nreturn true;\r\n}\r\nbreak;\r\n}\r\n})()){\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__25512),cljs$tools$reader$impl$utils$namespace_keys_$_iter__25509(cljs.core.chunk_rest(s__25510__$2)));\r\n} else {\r\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__25512),null);\r\n}\r\n} else {\r\nvar key = cljs.core.first(s__25510__$2);\r\nreturn cljs.core.cons((((((key instanceof cljs.core.Symbol)) || ((key instanceof cljs.core.Keyword))))?(function (){var vec__25523 = (function (){var fexpr__25526 = cljs.core.juxt.cljs$core$IFn$_invoke$arity$2(cljs.core.namespace,cljs.core.name);\r\nreturn (fexpr__25526.cljs$core$IFn$_invoke$arity$1 ? fexpr__25526.cljs$core$IFn$_invoke$arity$1(key) : fexpr__25526.call(null,key));\r\n})();\r\nvar key_ns = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25523,(0),null);\r\nvar key_name = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25523,(1),null);\r\nvar __GT_key = (((key instanceof cljs.core.Symbol))?cljs.core.symbol:cljs.core.keyword);\r\nif((key_ns == null)){\r\nreturn (__GT_key.cljs$core$IFn$_invoke$arity$2 ? __GT_key.cljs$core$IFn$_invoke$arity$2(ns,key_name) : __GT_key.call(null,ns,key_name));\r\n} else {\r\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\"_\",key_ns)){\r\nreturn (__GT_key.cljs$core$IFn$_invoke$arity$1 ? __GT_key.cljs$core$IFn$_invoke$arity$1(key_name) : __GT_key.call(null,key_name));\r\n} else {\r\nreturn key;\r\n\r\n}\r\n}\r\n})():key),cljs$tools$reader$impl$utils$namespace_keys_$_iter__25509(cljs.core.rest(s__25510__$2)));\r\n}\r\n} else {\r\nreturn null;\r\n}\r\nbreak;\r\n}\r\n}),null,null));\r\n});\r\nreturn iter__4523__auto__(keys);\r\n});\r\ncljs.tools.reader.impl.utils.second_SINGLEQUOTE_ = (function cljs$tools$reader$impl$utils$second_SINGLEQUOTE_(p__25529){\r\nvar vec__25530 = p__25529;\r\nvar a = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25530,(0),null);\r\nvar b = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__25530,(1),null);\r\nif(cljs.core.truth_(a)){\r\nreturn null;\r\n} else {\r\nreturn b;\r\n}\r\n});\r\ncljs.tools.reader.impl.utils.char_code = (function cljs$tools$reader$impl$utils$char_code(ch,base){\r\nvar code = parseInt(ch,base);\r\nif(cljs.core.truth_(isNaN(code))){\r\nreturn (-1);\r\n} else {\r\nreturn code;\r\n}\r\n});\r\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","cljs/tools/reader/impl/utils.cljs","~:line",9,"~:column",5,"~:end-line",9,"~:end-column",33],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader"],"~:use-macros",null,"~:excludes",["~#set",["~$char"]],"~:name","~$cljs.tools.reader.impl.utils","~:op","~:ns","~:imports",null,"~:requires",["^ ","~$clojure.string","^H","~$string","^H","~$goog.string","^J","~$gstring","^J","~$cljs.core","^L","~$goog","^M"],"~:seen",["^@",["~:require"]],"~:uses",null,"~:require-macros",["^ ","^L","^L"],"~:form",["~#list",["~$ns","^C",["^S",["~:refer-clojure","~:exclude",["^A"]]],["^S",["^O",["^H","~:as","^I"],["^J","^W","^K"]]]]],"~:flags",["^ ","^O",["^@",[]]],"~:js-deps",["^ "],"~:deps",["^M","^L","^H","^J"]],"^E","^C","~:resource-id",["~:shadow.build.classpath/resource","cljs/tools/reader/impl/utils.cljs"],"~:compiled-at",1561185844026,"~:resource-name","cljs/tools/reader/impl/utils.cljs","~:warnings",[],"~:source",";;   Copyright (c) Nicola Mometto, Rich Hickey & contributors.\n;;   The use and distribution terms for this software are covered by the\n;;   Eclipse Public License 1.0 (http://opensource.org/licenses/eclipse-1.0.php)\n;;   which can be found in the file epl-v10.html at the root of this distribution.\n;;   By using this software in any fashion, you are agreeing to be bound by\n;;   the terms of this license.\n;;   You must not remove this notice, or any other, from this software.\n\n(ns cljs.tools.reader.impl.utils\n  (:refer-clojure :exclude [char])\n  (:require\n   [clojure.string :as string]\n   [goog.string :as gstring]))\n\n(defn char [x]\n  (when-not (nil? x)\n    (cljs.core/char x)))\n\n(defn ^boolean ex-info? [ex]\n  (instance? cljs.core.ExceptionInfo ex))\n\n(defrecord ReaderConditional [splicing? form])\n\n(defn ^boolean reader-conditional?\n  \"Return true if the value is the data representation of a reader conditional\"\n  [value]\n  (instance? ReaderConditional value))\n\n(defn reader-conditional\n  \"Construct a data representation of a reader conditional.\n  If true, splicing? indicates read-cond-splicing.\"\n  [form splicing?]\n  (ReaderConditional. splicing? form))\n\n(extend-protocol IPrintWithWriter\n  ReaderConditional\n  (-pr-writer [coll writer opts]\n    (-write writer (str \"#?\" (when (:splicing? coll) \"@\")))\n    (pr-writer (:form coll) writer opts)))\n\n(def ws-rx #\"[\\s]\")\n\n(defn ^boolean whitespace?\n  \"Checks whether a given character is whitespace\"\n  [ch]\n  (when-not (nil? ch)\n    (if (identical? ch \\,)\n      true\n      (.test ws-rx ch))))\n\n(defn ^boolean numeric?\n  \"Checks whether a given character is numeric\"\n  [ch]\n  (when-not (nil? ch)\n    (gstring/isNumeric ch)))\n\n(defn ^boolean newline?\n  \"Checks whether the character is a newline\"\n  [c]\n  (or (identical? \\newline c)\n      (identical? \"\\n\" c)\n      (nil? c)))\n\n(defn desugar-meta\n  \"Resolves syntactical sugar in metadata\" ;; could be combined with some other desugar?\n  [f]\n  (cond\n    (keyword? f) {f true}\n    (symbol? f)  {:tag f}\n    (string? f)  {:tag f}\n    :else        f))\n\n(def last-id (atom 0))\n\n(defn next-id\n  []\n  (swap! last-id inc))\n\n(defn namespace-keys [ns keys]\n  (for [key keys]\n    (if (or (symbol? key)\n            (keyword? key))\n      (let [[key-ns key-name] ((juxt namespace name) key)\n            ->key (if (symbol? key) symbol keyword)]\n        (cond\n          (nil? key-ns)\n          (->key ns key-name)\n\n          (= \"_\" key-ns)\n          (->key key-name)\n\n          :else\n          key))\n      key)))\n\n(defn second' [[a b]]\n  (when-not a b))\n\n(defn char-code [ch base]\n  (let [code (js/parseInt ch base)]\n    (if (js/isNaN code)\n      -1\n      code)))\n","~:reader-features",["^@",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["cljs.tools.reader.impl.utils/char","x","cljs.core/char","cljs.tools.reader.impl.utils/ex-info?","ex","cljs.core/ExceptionInfo","this__4385__auto__","k__4386__auto__","this__4387__auto__","k25432","else__4388__auto__","G__25445","cljs.core/Keyword","splicing?","form","cljs.core.get.cljs$core$IFn$_invoke$arity$3","__extmap","this__4404__auto__","f__4405__auto__","init__4406__auto__","cljs.core.reduce.cljs$core$IFn$_invoke$arity$3","ret__4407__auto__","p__25449","vec__25452","k__4408__auto__","cljs.core.nth.cljs$core$IFn$_invoke$arity$3","v__4409__auto__","this__4399__auto__","writer__4400__auto__","opts__4401__auto__","pr-pair__4402__auto__","keyval__4403__auto__","cljs.core/pr-sequential-writer","cljs.core.concat.cljs$core$IFn$_invoke$arity$2","cljs.core/PersistentVector","G__25431","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4383__auto__","__meta","this__4380__auto__","__hash","this__4389__auto__","cljs.core/count","this__4381__auto__","h__4243__auto__","fexpr__25458","coll__4382__auto__","cljs.core/hash-unordered-coll","this25433","other25434","cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2","this__4394__auto__","k__4395__auto__","cljs.core/contains?","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2","cljs.core/-with-meta","cljs.core.into.cljs$core$IFn$_invoke$arity$2","cljs.core/not-empty","this__4392__auto__","k__4393__auto__","pred__25463","cljs.core/keyword-identical?","expr__25464","G__25466","G__25467","G__25468","G__25469","cljs.core.assoc.cljs$core$IFn$_invoke$arity$3","this__4397__auto__","cljs.core/seq","cljs.core/MapEntry","this__4384__auto__","this__4390__auto__","entry__4391__auto__","cljs.core/vector?","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/-conj","cljs.tools.reader.impl.utils/ReaderConditional","this__4428__auto__","cljs.core/List","writer__4429__auto__","cljs.core/-write","G__25440","extmap__4424__auto__","G__25475","cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic","cljs.core/record?","cljs.tools.reader.impl.utils/->ReaderConditional","cljs.tools.reader.impl.utils/map->ReaderConditional","cljs.tools.reader.impl.utils/reader-conditional?","value","cljs.tools.reader.impl.utils/reader-conditional","cljs.core/PROTOCOL_SENTINEL","coll","writer","opts","cljs.core/pr-writer","cljs.tools.reader.impl.utils/ws-rx","cljs.tools.reader.impl.utils/whitespace?","ch","cljs.tools.reader.impl.utils/numeric?","goog.string/isNumeric","cljs.tools.reader.impl.utils/newline?","c","cljs.tools.reader.impl.utils/desugar-meta","f","cljs.core/Symbol","cljs.tools.reader.impl.utils/last-id","cljs.core.atom.cljs$core$IFn$_invoke$arity$1","cljs.tools.reader.impl.utils/next-id","cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2","cljs.core/inc","cljs.tools.reader.impl.utils/namespace-keys","ns","keys","iter__4523__auto__","s__25510","cljs.core/LazySeq","temp__5720__auto__","cljs.core/chunked-seq?","c__4521__auto__","size__4522__auto__","b__25512","cljs.core/chunk-buffer","i__25511","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__25509","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","key","vec__25519","vec__25523","key-ns","key-name","fexpr__25522","fexpr__25526","cljs.core.juxt.cljs$core$IFn$_invoke$arity$2","cljs.core/namespace","cljs.core/name","->key","cljs.core/symbol","cljs.core/keyword","p__25529","vec__25530","cljs.tools.reader.impl.utils/second'","a","b","cljs.tools.reader.impl.utils/char-code","base","code","js/parseInt","js/isNaN","cljs.core/chunk-first"]]],"~:cache-keys",["~#cmap",[["~:macro","^L"],[1559731661000],["^10","cljs/tools/reader/impl/utils.cljs"],[1545551757714,"~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^@",[]],"~:deps-syms",["^M","^L","^H","^J"]]],["^10","goog/math/math.js"],[1559731662713,"^1>",["^ ","^1?",null,"^1@",["^@",[]],"^1A",["^M","~$goog.array","~$goog.asserts"]]],["^10","goog/array/array.js"],[1559731662713,"^1>",["^ ","^1?",null,"^1@",["^@",[]],"^1A",["^M","^1C"]]],["^10","goog/debug/error.js"],[1559731662713,"^1>",["^ ","^1?",null,"^1@",["^@",[]],"^1A",["^M"]]],["^10","goog/dom/nodetype.js"],[1559731662713,"^1>",["^ ","^1?",null,"^1@",["^@",[]],"^1A",["^M"]]],["^10","goog/object/object.js"],[1559731662713,"^1>",["^ ","^1?",null,"^1@",["^@",[]],"^1A",["^M"]]],"~:SHADOW-TIMESTAMP",[1561185693000,1559731661000],["^10","goog/math/long.js"],[1559731662713,"^1>",["^ ","^1?",null,"^1@",["^@",[]],"^1A",["^M","^1C","~$goog.reflect"]]],["^10","goog/string/internal.js"],[1559731662713,"^1>",["^ ","^1?",null,"^1@",["^@",[]],"^1A",["^M"]]],["^10","goog/functions/functions.js"],[1559731662713,"^1>",["^ ","^1?",null,"^1@",["^@",[]],"^1A",["^M"]]],["^10","goog/structs/map.js"],[1559731662713,"^1>",["^ ","^1?",null,"^1@",["^@",[]],"^1A",["^M","~$goog.iter.Iterator","~$goog.iter.StopIteration"]]],["^10","goog/asserts/asserts.js"],[1559731662713,"^1>",["^ ","^1?",null,"^1@",["^@",[]],"^1A",["^M","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^10","goog/uri/uri.js"],[1559731662713,"^1>",["^ ","^1?",null,"^1@",["^@",[]],"^1A",["^M","^1B","^1C","^J","~$goog.structs","~$goog.structs.Map","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^10","goog/base.js"],[1559731662713,"^1>",["^ ","^1?",null,"^1@",["^@",[]],"^1A",[]]],["^10","goog/structs/structs.js"],[1559731662713,"^1>",["^ ","^1?",null,"^1@",["^@",[]],"^1A",["^M","^1B","~$goog.object"]]],["^10","clojure/string.cljs"],[1559731661912,"^1>",["^ ","^1?",null,"^1@",["^@",[]],"^1A",["^M","^L","^J","~$goog.string.StringBuffer"]]],["^10","goog/string/string.js"],[1559731662713,"^1>",["^ ","^1?",null,"^1@",["^@",[]],"^1A",["^M","~$goog.string.internal"]]],["^10","goog/reflect/reflect.js"],[1559731662713,"^1>",["^ ","^1?",null,"^1@",["^@",[]],"^1A",["^M"]]],["^10","goog/string/stringbuffer.js"],[1559731662713,"^1>",["^ ","^1?",null,"^1@",["^@",[]],"^1A",["^M"]]],["^10","goog/iter/iter.js"],[1559731662713,"^1>",["^ ","^1?",null,"^1@",["^@",[]],"^1A",["^M","^1B","^1C","~$goog.functions","~$goog.math"]]],["^10","cljs/core.cljs"],[1559731661912,"^1>",["^ ","^1?",null,"^1@",["^@",[]],"^1A",["~$goog.math.Long","~$goog.math.Integer","^J","^1O","^1B","~$goog.Uri","^1P"]]],["^10","goog/math/integer.js"],[1559731662713,"^1>",["^ ","^1?",null,"^1@",["^@",[]],"^1A",["^M"]]],["^10","goog/uri/utils.js"],[1559731662713,"^1>",["^ ","^1?",null,"^1@",["^@",[]],"^1A",["^M","^1B","^1C","^J"]]]]],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","cljs/tools/reader/impl/utils.cljs","^7",9,"^8",5,"^9",9,"^:",33],"^;",["^ ","^<","^="],"^>",null,"^?",["^@",["^A"]],"^B","^C","^F",null,"^G",["^ ","^H","^H","^I","^H","^J","^J","^K","^J","^L","^L","^M","^M"],"^N",["^@",["^O"]],"~:shadow/js-access-global",["^@",["isNaN","parseInt"]],"^P",null,"~:defs",["^ ","~$reader-conditional",["^ ","~:protocol-inline",null,"^5",["^ ","^6","cljs/tools/reader/impl/utils.cljs","^7",29,"^8",7,"^9",29,"^:",25,"~:arglists",["^S",["~$quote",["^S",[["~$form","~$splicing?"]]]]],"~:doc","Construct a data representation of a reader conditional.\n  If true, splicing? indicates read-cond-splicing."],"^B","~$cljs.tools.reader.impl.utils/reader-conditional","^6","cljs/tools/reader/impl/utils.cljs","^:",25,"~:method-params",["^S",[["^22","^23"]]],"~:protocol-impl",null,"~:arglists-meta",["^S",[null,null]],"^8",1,"~:variadic?",false,"^7",29,"~:ret-tag","~$cljs.tools.reader.impl.utils/ReaderConditional","^9",29,"~:max-fixed-arity",2,"~:fn-var",true,"^20",["^S",["^21",["^S",[["^22","^23"]]]]],"^24","Construct a data representation of a reader conditional.\n  If true, splicing? indicates read-cond-splicing."],"~$whitespace?",["^ ","^1[",null,"^5",["^ ","^6","cljs/tools/reader/impl/utils.cljs","^7",43,"^8",16,"^9",43,"^:",27,"~:tag","~$boolean","^20",["^S",["^21",["^S",[["~$ch"]]]]],"^24","Checks whether a given character is whitespace"],"^B","~$cljs.tools.reader.impl.utils/whitespace?","^6","cljs/tools/reader/impl/utils.cljs","^:",27,"^26",["^S",[["^2A"]]],"^27",null,"^28",["^S",[null,null]],"^8",1,"^29",false,"^7",43,"^2:","^2@","^9",43,"^2<",1,"^2?","^2@","^2=",true,"^20",["^S",["^21",["^S",[["^2A"]]]]],"^24","Checks whether a given character is whitespace"],"~$char-code",["^ ","^1[",null,"^5",["^ ","^6","cljs/tools/reader/impl/utils.cljs","^7",99,"^8",7,"^9",99,"^:",16,"^20",["^S",["^21",["^S",[["^2A","~$base"]]]]]],"^B","~$cljs.tools.reader.impl.utils/char-code","^6","cljs/tools/reader/impl/utils.cljs","^:",16,"^26",["^S",[["^2A","^2D"]]],"^27",null,"^28",["^S",[null,null]],"^8",1,"^29",false,"^7",99,"^2:",["^@",["~$js","~$number"]],"^9",99,"^2<",2,"^2=",true,"^20",["^S",["^21",["^S",[["^2A","^2D"]]]]]],"~$last-id",["^ ","^B","~$cljs.tools.reader.impl.utils/last-id","^6","cljs/tools/reader/impl/utils.cljs","^7",73,"^8",1,"^9",73,"^:",13,"^5",["^ ","^6","cljs/tools/reader/impl/utils.cljs","^7",73,"^8",6,"^9",73,"^:",13],"^2?","~$cljs.core/Atom"],"^A",["^ ","^1[",null,"^5",["^ ","^6","cljs/tools/reader/impl/utils.cljs","^7",15,"^8",7,"^9",15,"^:",11,"^20",["^S",["^21",["^S",[["~$x"]]]]]],"^B","~$cljs.tools.reader.impl.utils/char","^6","cljs/tools/reader/impl/utils.cljs","^:",11,"^26",["^S",[["~$x"]]],"^27",null,"^28",["^S",[null,null]],"^8",1,"^29",false,"^7",15,"^2:",["^@",[null,"^2F","~$clj-nil"]],"^9",15,"^2<",1,"^2=",true,"^20",["^S",["^21",["^S",[["~$x"]]]]]],"~$numeric?",["^ ","^1[",null,"^5",["^ ","^6","cljs/tools/reader/impl/utils.cljs","^7",51,"^8",16,"^9",51,"^:",24,"^2?","^2@","^20",["^S",["^21",["^S",[["^2A"]]]]],"^24","Checks whether a given character is numeric"],"^B","~$cljs.tools.reader.impl.utils/numeric?","^6","cljs/tools/reader/impl/utils.cljs","^:",24,"^26",["^S",[["^2A"]]],"^27",null,"^28",["^S",[null,null]],"^8",1,"^29",false,"^7",51,"^2:","^2@","^9",51,"^2<",1,"^2?","^2@","^2=",true,"^20",["^S",["^21",["^S",[["^2A"]]]]],"^24","Checks whether a given character is numeric"],"~$ReaderConditional",["^ ","~:num-fields",2,"~:protocols",["^@",["~$cljs.core/IRecord","~$cljs.core/IKVReduce","~$cljs.core/IEquiv","~$cljs.core/IHash","~$cljs.core/ICollection","~$cljs.core/ICounted","~$cljs.core/ISeqable","~$cljs.core/IMeta","~$cljs.core/ICloneable","~$cljs.core/IPrintWithWriter","~$cljs.core/IIterable","~$cljs.core/IWithMeta","~$cljs.core/IAssociative","~$cljs.core/IMap","~$cljs.core/ILookup"]],"^B","^2;","^6","cljs/tools/reader/impl/utils.cljs","^:",29,"~:type",true,"^8",12,"~:internal-ctor",true,"^7",22,"~:record",true,"^9",22,"^2?","~$function","~:skip-protocol-flag",["^@",["^2R","^2S","^2T","^2U","^2V","^2W","^2X","^2Y","^2Z","^2[","^30","^31","^32","^33","^34"]]],"~$second'",["^ ","^1[",null,"^5",["^ ","^6","cljs/tools/reader/impl/utils.cljs","^7",96,"^8",7,"^9",96,"^:",14,"^20",["^S",["^21",["^S",[[["~$a","~$b"]]]]]]],"^B","~$cljs.tools.reader.impl.utils/second'","^6","cljs/tools/reader/impl/utils.cljs","^:",14,"^26",["^S",[["~$p__25529"]]],"^27",null,"^28",["^S",[null,null]],"^8",1,"^29",false,"^7",96,"^2:",["^@",[null,"~$any","^2L"]],"^9",96,"^2<",1,"^2=",true,"^20",["^S",["^21",["^S",[[["~$a","~$b"]]]]]]],"~$desugar-meta",["^ ","^1[",null,"^5",["^ ","^6","cljs/tools/reader/impl/utils.cljs","^7",64,"^8",7,"^9",64,"^:",19,"^20",["^S",["^21",["^S",[["~$f"]]]]],"^24","Resolves syntactical sugar in metadata"],"^B","~$cljs.tools.reader.impl.utils/desugar-meta","^6","cljs/tools/reader/impl/utils.cljs","^:",19,"^26",["^S",[["~$f"]]],"^27",null,"^28",["^S",[null,null]],"^8",1,"^29",false,"^7",64,"^2:",["^@",[null,"^33"]],"^9",64,"^2<",1,"^2=",true,"^20",["^S",["^21",["^S",[["~$f"]]]]],"^24","Resolves syntactical sugar in metadata"],"~$->ReaderConditional",["^ ","^1[",null,"^5",["^ ","^6","cljs/tools/reader/impl/utils.cljs","^:",29,"^8",12,"^36",true,"~:factory","~:positional","^7",22,"^9",22,"^20",["^S",["^21",["^S",[["^23","^22"]]]]],"^24","Positional factory function for cljs.tools.reader.impl.utils/ReaderConditional."],"^B","~$cljs.tools.reader.impl.utils/->ReaderConditional","^6","cljs/tools/reader/impl/utils.cljs","^:",29,"^26",["^S",[["^23","^22"]]],"^27",null,"^28",["^S",[null,null]],"^8",1,"^36",true,"^29",false,"^3A","^3B","^7",22,"^2:","^2;","^9",22,"^2<",2,"^2=",true,"^20",["^S",["^21",["^S",[["^23","^22"]]]]],"^24","Positional factory function for cljs.tools.reader.impl.utils/ReaderConditional."],"~$next-id",["^ ","^1[",null,"^5",["^ ","^6","cljs/tools/reader/impl/utils.cljs","^7",75,"^8",7,"^9",75,"^:",14,"^20",["^S",["^21",["^S",[[]]]]]],"^B","~$cljs.tools.reader.impl.utils/next-id","^6","cljs/tools/reader/impl/utils.cljs","^:",14,"^26",["^S",[[]]],"^27",null,"^28",["^S",[null,null]],"^8",1,"^29",false,"^7",75,"^2:",["^@",[null,"^3="]],"^9",75,"^2<",0,"^2=",true,"^20",["^S",["^21",["^S",[[]]]]]],"~$map->ReaderConditional",["^ ","^1[",null,"^5",["^ ","^6","cljs/tools/reader/impl/utils.cljs","^:",29,"^8",12,"^36",true,"^3A","~:map","^7",22,"^9",22,"^20",["^S",["^21",["^S",[["~$G__25440"]]]]],"^24","Factory function for cljs.tools.reader.impl.utils/ReaderConditional, taking a map of keywords to field values."],"^B","~$cljs.tools.reader.impl.utils/map->ReaderConditional","^6","cljs/tools/reader/impl/utils.cljs","^:",29,"^26",["^S",[["^3H"]]],"^27",null,"^28",["^S",[null,null]],"^8",1,"^36",true,"^29",false,"^3A","^3G","^7",22,"^2:","^2;","^9",22,"^2<",1,"^2=",true,"^20",["^S",["^21",["^S",[["^3H"]]]]],"^24","Factory function for cljs.tools.reader.impl.utils/ReaderConditional, taking a map of keywords to field values."],"~$ex-info?",["^ ","^1[",null,"^5",["^ ","^6","cljs/tools/reader/impl/utils.cljs","^7",19,"^8",16,"^9",19,"^:",24,"^2?","^2@","^20",["^S",["^21",["^S",[["~$ex"]]]]]],"^B","~$cljs.tools.reader.impl.utils/ex-info?","^6","cljs/tools/reader/impl/utils.cljs","^:",24,"^26",["^S",[["^3K"]]],"^27",null,"^28",["^S",[null,null]],"^8",1,"^29",false,"^7",19,"^2:","^2@","^9",19,"^2<",1,"^2?","^2@","^2=",true,"^20",["^S",["^21",["^S",[["^3K"]]]]]],"~$reader-conditional?",["^ ","^1[",null,"^5",["^ ","^6","cljs/tools/reader/impl/utils.cljs","^7",24,"^8",16,"^9",24,"^:",35,"^2?","^2@","^20",["^S",["^21",["^S",[["~$value"]]]]],"^24","Return true if the value is the data representation of a reader conditional"],"^B","~$cljs.tools.reader.impl.utils/reader-conditional?","^6","cljs/tools/reader/impl/utils.cljs","^:",35,"^26",["^S",[["^3N"]]],"^27",null,"^28",["^S",[null,null]],"^8",1,"^29",false,"^7",24,"^2:","^2@","^9",24,"^2<",1,"^2?","^2@","^2=",true,"^20",["^S",["^21",["^S",[["^3N"]]]]],"^24","Return true if the value is the data representation of a reader conditional"],"~$newline?",["^ ","^1[",null,"^5",["^ ","^6","cljs/tools/reader/impl/utils.cljs","^7",57,"^8",16,"^9",57,"^:",24,"^2?","^2@","^20",["^S",["^21",["^S",[["~$c"]]]]],"^24","Checks whether the character is a newline"],"^B","~$cljs.tools.reader.impl.utils/newline?","^6","cljs/tools/reader/impl/utils.cljs","^:",24,"^26",["^S",[["~$c"]]],"^27",null,"^28",["^S",[null,null]],"^8",1,"^29",false,"^7",57,"^2:","^2@","^9",57,"^2<",1,"^2?","^2@","^2=",true,"^20",["^S",["^21",["^S",[["~$c"]]]]],"^24","Checks whether the character is a newline"],"~$namespace-keys",["^ ","^1[",null,"^5",["^ ","^6","cljs/tools/reader/impl/utils.cljs","^7",79,"^8",7,"^9",79,"^:",21,"^20",["^S",["^21",["^S",[["^T","~$keys"]]]]]],"^B","~$cljs.tools.reader.impl.utils/namespace-keys","^6","cljs/tools/reader/impl/utils.cljs","^:",21,"^26",["^S",[["^T","^3S"]]],"^27",null,"^28",["^S",[null,null]],"^8",1,"^29",false,"^7",79,"^2:","~$cljs.core/LazySeq","^9",79,"^2<",2,"^2=",true,"^20",["^S",["^21",["^S",[["^T","^3S"]]]]]],"~$ws-rx",["^ ","^B","~$cljs.tools.reader.impl.utils/ws-rx","^6","cljs/tools/reader/impl/utils.cljs","^7",41,"^8",1,"^9",41,"^:",11,"^5",["^ ","^6","cljs/tools/reader/impl/utils.cljs","^7",41,"^8",6,"^9",41,"^:",11],"^2?","^3="]],"^Q",["^ ","^L","^L"],"~:cljs.analyzer/constants",["^ ","^N",["^@",["^22","~:else","~:splicing?","^23","^R","^2?"]],"~:order",["^3Z","^R","^23","^22","^2?","^3Y"]],"^X",["^ ","^O",["^@",[]]],"^Y",["^ "],"^Z",["^M","^L","^H","^J"]],"^E","^C","~:ns-specs",["^ "],"~:ns-speced-vars",[],"~:compiler-options",["^1<",[["^42","~:static-fns"],true,["^42","~:elide-asserts"],false,["^42","~:optimize-constants"],null,["^42","^13"],null,["^42","~:external-config"],null,["^42","~:tooling-config"],null,["^42","~:emit-constants"],null,["^42","~:load-tests"],null,["^42","~:infer-externs"],true,["^42","^15"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^42","~:fn-invoke-direct"],null,["^42","~:source-map"],"/dev/null"]]]